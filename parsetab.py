
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSERGREATERLESSER_EQUALGREATER_EQUALEQUALleftPLUSMINUSleftTIMESDIVIDEleftORANDAND ASSIGN BEGIN BOOL BOOLEAN CHAR CHARACTER COLON COMMA DIVIDE DO DOWNTO ELSE END EQUAL FOR FUNCTION GREATER GREATER_EQUAL ID IF INT INTEGER LESSER LESSER_EQUAL LPAREN MINUS MOD NOT OR PLUS PROCEDURE PROGRAM RE REAL REPEAT RPAREN SEMICOLON STR STRING THEN TIMES TO UNTIL VAR WHILE WRITEstart : PROGRAM ID SEMICOLON variable_block functions main_bodyfunctions : FUNCTION ID LPAREN function_variables RPAREN COLON INTEGER SEMICOLON variable_block main_body functions\n            | FUNCTION ID LPAREN function_variables RPAREN COLON REAL SEMICOLON variable_block main_body functions\n            | FUNCTION ID LPAREN function_variables RPAREN COLON BOOLEAN SEMICOLON variable_block main_body functions\n            | FUNCTION ID LPAREN function_variables RPAREN COLON STRING SEMICOLON variable_block main_body functions\n            | FUNCTION ID LPAREN function_variables RPAREN COLON CHARACTER SEMICOLON variable_block main_body functions\n            | PROCEDURE ID SEMICOLON variable_block main_body functions\n            | emptyfunction_variables : ID COLON INTEGER\n            | ID COLON REAL\n            | ID COLON BOOLEAN\n            | ID COLON STRING\n            | ID COLON CHARACTER\n            | ID COLON INTEGER COMMA function_variables\n            | ID COLON REAL COMMA function_variables\n            | ID COLON BOOLEAN COMMA function_variables\n            | ID COLON STRING COMMA function_variables\n            | ID COLON CHARACTER COMMA function_variables\n            | ID COLON INTEGER SEMICOLON function_variables\n            | ID COLON REAL SEMICOLON function_variables\n            | ID COLON BOOLEAN SEMICOLON function_variables\n            | ID COLON STRING SEMICOLON function_variables\n            | ID COLON CHARACTER SEMICOLON function_variables\n            | emptymain_body : BEGIN body ENDwrite : WRITE LPAREN STR RPAREN SEMICOLON\n        | WRITE LPAREN expression RPAREN SEMICOLONbody : while_loop body\n        | for_loop body\n        | repeat_loop body\n        | if_statement body\n        | expression body\n        | var_assign body\n        | write body\n        | emptywhile_loop : WHILE boolean_expression DO main_bodyfor_loop : FOR ID ASSIGN INT DOWNTO INT DO main_body\n            | FOR ID ASSIGN INT TO INT DO main_bodyrepeat_loop : REPEAT body UNTIL boolean_expression SEMICOLONif_statement : IF boolean_expression THEN main_body\n        | IF boolean_expression THEN main_body ELSE main_bodynumeric : INT\n            | RE\n            | IDboolean_expression : expression LESSER expression\n            | expression LESSER_EQUAL expression\n            | expression EQUAL expression\n            | expression GREATER_EQUAL expression\n            | expression GREATER expression\n            | NOT boolean_expression\n            | boolean_expression and_or boolean_expression\n            | LPAREN boolean_expression RPAREN\n            | BOOLand_or : AND\n            | ORvar_assign : ID ASSIGN STR SEMICOLON\n        | ID ASSIGN CHAR SEMICOLON\n        | ID ASSIGN BOOL SEMICOLON\n        | ID ASSIGN expression SEMICOLON\n        | ID SEMICOLONfunction_call : ID LPAREN vars RPARENvars : STR COMMA vars\n            | BOOL COMMA vars\n            | CHAR COMMA vars\n            | expression COMMA vars\n            | expression\n            | STR\n            | BOOL\n            | CHARexpression : expression PLUS expression\n           | expression MINUS expression\n           | expression TIMES expression\n           | expression DIVIDE expression\n           | expression MOD expression\n           | LPAREN expression RPAREN\n           | numeric\n           | function_callvariable_block : empty\n        | VAR variablesvariables : variable_describe\n        | variable_describe variablesvariable_describe : ID COLON STRING SEMICOLON\n        | ID COLON INTEGER SEMICOLON\n        | ID COLON CHARACTER SEMICOLON\n        | ID COLON BOOLEAN SEMICOLON\n        | ID COLON REAL SEMICOLONempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,15,48,],[0,-1,-25,]),'ID':([2,7,9,10,13,16,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,40,41,48,54,55,56,57,58,63,64,66,68,69,70,74,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,111,113,119,128,129,130,131,132,133,134,135,136,138,154,156,157,158,159,160,161,162,163,164,165,166,167,175,198,199,],[3,14,17,18,14,32,32,32,32,32,32,32,32,66,67,-44,-42,32,66,66,-76,-77,-43,75,-25,66,66,66,66,66,66,66,-44,66,-60,66,66,-82,-83,-84,-85,-86,-70,-71,-72,-73,-74,66,-54,-55,66,66,66,66,66,66,-75,-36,-56,-57,-58,-59,-61,66,66,66,66,-40,-39,-26,-27,75,75,75,75,75,75,75,75,75,75,-41,-37,-38,]),'SEMICOLON':([3,18,32,33,37,38,40,43,44,45,46,47,65,66,84,85,86,87,88,98,102,103,104,105,113,120,121,122,123,124,125,126,132,137,139,140,141,142,143,144,145,168,169,170,171,172,],[4,42,69,-42,-76,-77,-43,79,80,81,82,83,-53,-44,-70,-71,-72,-73,-74,-50,128,129,130,131,-75,-51,-45,-46,-47,-48,-49,-52,-61,154,156,157,159,161,163,165,167,186,187,188,189,190,]),'VAR':([4,42,186,187,188,189,190,],[7,7,7,7,7,7,7,]),'FUNCTION':([4,5,6,12,13,19,48,79,80,81,82,83,118,200,201,202,203,204,],[-87,9,-78,-79,-80,-81,-25,-82,-83,-84,-85,-86,9,9,9,9,9,9,]),'PROCEDURE':([4,5,6,12,13,19,48,79,80,81,82,83,118,200,201,202,203,204,],[-87,10,-78,-79,-80,-81,-25,-82,-83,-84,-85,-86,10,10,10,10,10,10,]),'BEGIN':([4,5,6,8,11,12,13,19,42,48,78,79,80,81,82,83,89,112,118,147,155,186,187,188,189,190,191,192,193,194,195,196,197,200,201,202,203,204,205,206,207,208,209,],[-87,-87,-78,16,-8,-79,-80,-81,-87,-25,16,-82,-83,-84,-85,-86,16,16,-87,-7,16,-87,-87,-87,-87,-87,16,16,16,16,16,16,16,-87,-87,-87,-87,-87,-2,-3,-4,-5,-6,]),'COLON':([14,75,117,],[20,116,146,]),'WHILE':([16,22,23,24,25,26,27,28,32,33,34,37,38,40,48,66,69,84,85,86,87,88,113,119,128,129,130,131,132,138,154,156,157,175,198,199,],[30,30,30,30,30,30,30,30,-44,-42,30,-76,-77,-43,-25,-44,-60,-70,-71,-72,-73,-74,-75,-36,-56,-57,-58,-59,-61,-40,-39,-26,-27,-41,-37,-38,]),'FOR':([16,22,23,24,25,26,27,28,32,33,34,37,38,40,48,66,69,84,85,86,87,88,113,119,128,129,130,131,132,138,154,156,157,175,198,199,],[31,31,31,31,31,31,31,31,-44,-42,31,-76,-77,-43,-25,-44,-60,-70,-71,-72,-73,-74,-75,-36,-56,-57,-58,-59,-61,-40,-39,-26,-27,-41,-37,-38,]),'REPEAT':([16,22,23,24,25,26,27,28,32,33,34,37,38,40,48,66,69,84,85,86,87,88,113,119,128,129,130,131,132,138,154,156,157,175,198,199,],[34,34,34,34,34,34,34,34,-44,-42,34,-76,-77,-43,-25,-44,-60,-70,-71,-72,-73,-74,-75,-36,-56,-57,-58,-59,-61,-40,-39,-26,-27,-41,-37,-38,]),'IF':([16,22,23,24,25,26,27,28,32,33,34,37,38,40,48,66,69,84,85,86,87,88,113,119,128,129,130,131,132,138,154,156,157,175,198,199,],[35,35,35,35,35,35,35,35,-44,-42,35,-76,-77,-43,-25,-44,-60,-70,-71,-72,-73,-74,-75,-36,-56,-57,-58,-59,-61,-40,-39,-26,-27,-41,-37,-38,]),'LPAREN':([16,17,22,23,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,48,54,55,56,57,58,63,64,66,68,69,70,74,84,85,86,87,88,90,91,92,93,94,95,96,97,111,113,119,128,129,130,131,132,133,134,135,136,138,154,156,157,175,198,199,],[36,41,36,36,36,36,36,36,36,64,70,-42,36,64,36,-76,-77,74,-43,-25,36,36,36,36,36,64,64,70,36,-60,36,36,-70,-71,-72,-73,-74,64,-54,-55,36,36,36,36,36,64,-75,-36,-56,-57,-58,-59,-61,36,36,36,36,-40,-39,-26,-27,-41,-37,-38,]),'WRITE':([16,22,23,24,25,26,27,28,32,33,34,37,38,40,48,66,69,84,85,86,87,88,113,119,128,129,130,131,132,138,154,156,157,175,198,199,],[39,39,39,39,39,39,39,39,-44,-42,39,-76,-77,-43,-25,-44,-60,-70,-71,-72,-73,-74,-75,-36,-56,-57,-58,-59,-61,-40,-39,-26,-27,-41,-37,-38,]),'END':([16,21,22,23,24,25,26,27,28,29,32,33,37,38,40,48,49,50,51,52,53,59,60,66,69,84,85,86,87,88,113,119,128,129,130,131,132,138,154,156,157,175,198,199,],[-87,48,-87,-87,-87,-87,-87,-87,-87,-35,-44,-42,-76,-77,-43,-25,-28,-29,-30,-31,-32,-33,-34,-44,-60,-70,-71,-72,-73,-74,-75,-36,-56,-57,-58,-59,-61,-40,-39,-26,-27,-41,-37,-38,]),'INT':([16,22,23,24,25,26,27,28,30,32,33,34,35,36,37,38,40,48,54,55,56,57,58,63,64,66,68,69,70,74,84,85,86,87,88,90,91,92,93,94,95,96,97,101,111,113,119,128,129,130,131,132,133,134,135,136,138,148,149,154,156,157,175,198,199,],[33,33,33,33,33,33,33,33,33,-44,-42,33,33,33,-76,-77,-43,-25,33,33,33,33,33,33,33,-44,33,-60,33,33,-70,-71,-72,-73,-74,33,-54,-55,33,33,33,33,33,127,33,-75,-36,-56,-57,-58,-59,-61,33,33,33,33,-40,173,174,-39,-26,-27,-41,-37,-38,]),'RE':([16,22,23,24,25,26,27,28,30,32,33,34,35,36,37,38,40,48,54,55,56,57,58,63,64,66,68,69,70,74,84,85,86,87,88,90,91,92,93,94,95,96,97,111,113,119,128,129,130,131,132,133,134,135,136,138,154,156,157,175,198,199,],[40,40,40,40,40,40,40,40,40,-44,-42,40,40,40,-76,-77,-43,-25,40,40,40,40,40,40,40,-44,40,-60,40,40,-70,-71,-72,-73,-74,40,-54,-55,40,40,40,40,40,40,-75,-36,-56,-57,-58,-59,-61,40,40,40,40,-40,-39,-26,-27,-41,-37,-38,]),'STRING':([20,116,146,],[43,144,171,]),'INTEGER':([20,116,146,],[44,141,168,]),'CHARACTER':([20,116,146,],[45,145,172,]),'BOOLEAN':([20,116,146,],[46,143,170,]),'REAL':([20,116,146,],[47,142,169,]),'UNTIL':([22,23,24,25,26,27,28,29,32,33,34,37,38,40,48,49,50,51,52,53,59,60,66,69,71,84,85,86,87,88,113,119,128,129,130,131,132,138,154,156,157,175,198,199,],[-87,-87,-87,-87,-87,-87,-87,-35,-44,-42,-87,-76,-77,-43,-25,-28,-29,-30,-31,-32,-33,-34,-44,-60,111,-70,-71,-72,-73,-74,-75,-36,-56,-57,-58,-59,-61,-40,-39,-26,-27,-41,-37,-38,]),'PLUS':([26,32,33,37,38,40,62,66,73,84,85,86,87,88,100,105,110,113,115,121,122,123,124,125,132,],[54,-44,-42,-76,-77,-43,54,-44,54,-70,-71,-72,-73,54,54,54,54,-75,54,54,54,54,54,54,-61,]),'MINUS':([26,32,33,37,38,40,62,66,73,84,85,86,87,88,100,105,110,113,115,121,122,123,124,125,132,],[55,-44,-42,-76,-77,-43,55,-44,55,-70,-71,-72,-73,55,55,55,55,-75,55,55,55,55,55,55,-61,]),'TIMES':([26,32,33,37,38,40,62,66,73,84,85,86,87,88,100,105,110,113,115,121,122,123,124,125,132,],[56,-44,-42,-76,-77,-43,56,-44,56,56,56,-72,-73,56,56,56,56,-75,56,56,56,56,56,56,-61,]),'DIVIDE':([26,32,33,37,38,40,62,66,73,84,85,86,87,88,100,105,110,113,115,121,122,123,124,125,132,],[57,-44,-42,-76,-77,-43,57,-44,57,57,57,-72,-73,57,57,57,57,-75,57,57,57,57,57,57,-61,]),'MOD':([26,32,33,37,38,40,62,66,73,84,85,86,87,88,100,105,110,113,115,121,122,123,124,125,132,],[58,-44,-42,-76,-77,-43,58,-44,58,-70,-71,-72,-73,58,58,58,58,-75,58,58,58,58,58,58,-61,]),'NOT':([30,35,63,64,90,91,92,111,],[63,63,63,63,63,-54,-55,63,]),'BOOL':([30,35,63,64,68,70,90,91,92,111,133,134,135,136,],[65,65,65,65,104,108,65,-54,-55,65,108,108,108,108,]),'ASSIGN':([32,67,],[68,101,]),'LESSER':([33,37,38,40,62,66,84,85,86,87,88,100,113,132,],[-42,-76,-77,-43,93,-44,-70,-71,-72,-73,-74,93,-75,-61,]),'LESSER_EQUAL':([33,37,38,40,62,66,84,85,86,87,88,100,113,132,],[-42,-76,-77,-43,94,-44,-70,-71,-72,-73,-74,94,-75,-61,]),'EQUAL':([33,37,38,40,62,66,84,85,86,87,88,100,113,132,],[-42,-76,-77,-43,95,-44,-70,-71,-72,-73,-74,95,-75,-61,]),'GREATER_EQUAL':([33,37,38,40,62,66,84,85,86,87,88,100,113,132,],[-42,-76,-77,-43,96,-44,-70,-71,-72,-73,-74,96,-75,-61,]),'GREATER':([33,37,38,40,62,66,84,85,86,87,88,100,113,132,],[-42,-76,-77,-43,97,-44,-70,-71,-72,-73,-74,97,-75,-61,]),'RPAREN':([33,37,38,40,41,65,66,73,76,77,84,85,86,87,88,98,99,100,106,107,108,109,110,113,114,115,120,121,122,123,124,125,126,132,141,142,143,144,145,150,151,152,153,158,159,160,161,162,163,164,165,166,167,176,177,178,179,180,181,182,183,184,185,],[-42,-76,-77,-43,-87,-53,-44,113,117,-24,-70,-71,-72,-73,-74,-50,126,113,132,-67,-68,-69,-66,-75,139,140,-51,-45,-46,-47,-48,-49,-52,-61,-9,-10,-11,-12,-13,-62,-63,-64,-65,-87,-87,-87,-87,-87,-87,-87,-87,-87,-87,-14,-19,-15,-20,-16,-21,-17,-22,-18,-23,]),'COMMA':([33,37,38,40,66,84,85,86,87,88,107,108,109,110,113,132,141,142,143,144,145,],[-42,-76,-77,-43,-44,-70,-71,-72,-73,-74,133,134,135,136,-75,-61,158,160,162,164,166,]),'DO':([33,37,38,40,61,65,66,84,85,86,87,88,98,113,120,121,122,123,124,125,126,132,173,174,],[-42,-76,-77,-43,89,-53,-44,-70,-71,-72,-73,-74,-50,-75,-51,-45,-46,-47,-48,-49,-52,-61,191,192,]),'AND':([33,37,38,40,61,65,66,72,84,85,86,87,88,98,99,113,120,121,122,123,124,125,126,132,137,],[-42,-76,-77,-43,91,-53,-44,91,-70,-71,-72,-73,-74,91,91,-75,91,-45,-46,-47,-48,-49,-52,-61,91,]),'OR':([33,37,38,40,61,65,66,72,84,85,86,87,88,98,99,113,120,121,122,123,124,125,126,132,137,],[-42,-76,-77,-43,92,-53,-44,92,-70,-71,-72,-73,-74,92,92,-75,92,-45,-46,-47,-48,-49,-52,-61,92,]),'THEN':([33,37,38,40,65,66,72,84,85,86,87,88,98,113,120,121,122,123,124,125,126,132,],[-42,-76,-77,-43,-53,-44,112,-70,-71,-72,-73,-74,-50,-75,-51,-45,-46,-47,-48,-49,-52,-61,]),'ELSE':([48,138,],[-25,155,]),'STR':([68,70,74,133,134,135,136,],[102,107,114,107,107,107,107,]),'CHAR':([68,70,133,134,135,136,],[103,109,109,109,109,109,]),'DOWNTO':([127,],[148,]),'TO':([127,],[149,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'variable_block':([4,42,186,187,188,189,190,],[5,78,193,194,195,196,197,]),'empty':([4,5,16,22,23,24,25,26,27,28,34,41,42,118,158,159,160,161,162,163,164,165,166,167,186,187,188,189,190,200,201,202,203,204,],[6,11,29,29,29,29,29,29,29,29,29,77,6,11,77,77,77,77,77,77,77,77,77,77,6,6,6,6,6,11,11,11,11,11,]),'functions':([5,118,200,201,202,203,204,],[8,147,205,206,207,208,209,]),'variables':([7,13,],[12,19,]),'variable_describe':([7,13,],[13,13,]),'main_body':([8,78,89,112,155,191,192,193,194,195,196,197,],[15,118,119,138,175,198,199,200,201,202,203,204,]),'body':([16,22,23,24,25,26,27,28,34,],[21,49,50,51,52,53,59,60,71,]),'while_loop':([16,22,23,24,25,26,27,28,34,],[22,22,22,22,22,22,22,22,22,]),'for_loop':([16,22,23,24,25,26,27,28,34,],[23,23,23,23,23,23,23,23,23,]),'repeat_loop':([16,22,23,24,25,26,27,28,34,],[24,24,24,24,24,24,24,24,24,]),'if_statement':([16,22,23,24,25,26,27,28,34,],[25,25,25,25,25,25,25,25,25,]),'expression':([16,22,23,24,25,26,27,28,30,34,35,36,54,55,56,57,58,63,64,68,70,74,90,93,94,95,96,97,111,133,134,135,136,],[26,26,26,26,26,26,26,26,62,26,62,73,84,85,86,87,88,62,100,105,110,115,62,121,122,123,124,125,62,110,110,110,110,]),'var_assign':([16,22,23,24,25,26,27,28,34,],[27,27,27,27,27,27,27,27,27,]),'write':([16,22,23,24,25,26,27,28,34,],[28,28,28,28,28,28,28,28,28,]),'numeric':([16,22,23,24,25,26,27,28,30,34,35,36,54,55,56,57,58,63,64,68,70,74,90,93,94,95,96,97,111,133,134,135,136,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'function_call':([16,22,23,24,25,26,27,28,30,34,35,36,54,55,56,57,58,63,64,68,70,74,90,93,94,95,96,97,111,133,134,135,136,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'boolean_expression':([30,35,63,64,90,111,],[61,72,98,99,120,137,]),'function_variables':([41,158,159,160,161,162,163,164,165,166,167,],[76,176,177,178,179,180,181,182,183,184,185,]),'and_or':([61,72,98,99,120,137,],[90,90,90,90,90,90,]),'vars':([70,133,134,135,136,],[106,150,151,152,153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM ID SEMICOLON variable_block functions main_body','start',6,'p_start','pascal_to_c.py',108),
  ('functions -> FUNCTION ID LPAREN function_variables RPAREN COLON INTEGER SEMICOLON variable_block main_body functions','functions',11,'p_functions','pascal_to_c.py',126),
  ('functions -> FUNCTION ID LPAREN function_variables RPAREN COLON REAL SEMICOLON variable_block main_body functions','functions',11,'p_functions','pascal_to_c.py',127),
  ('functions -> FUNCTION ID LPAREN function_variables RPAREN COLON BOOLEAN SEMICOLON variable_block main_body functions','functions',11,'p_functions','pascal_to_c.py',128),
  ('functions -> FUNCTION ID LPAREN function_variables RPAREN COLON STRING SEMICOLON variable_block main_body functions','functions',11,'p_functions','pascal_to_c.py',129),
  ('functions -> FUNCTION ID LPAREN function_variables RPAREN COLON CHARACTER SEMICOLON variable_block main_body functions','functions',11,'p_functions','pascal_to_c.py',130),
  ('functions -> PROCEDURE ID SEMICOLON variable_block main_body functions','functions',6,'p_functions','pascal_to_c.py',131),
  ('functions -> empty','functions',1,'p_functions','pascal_to_c.py',132),
  ('function_variables -> ID COLON INTEGER','function_variables',3,'p_function_variables','pascal_to_c.py',143),
  ('function_variables -> ID COLON REAL','function_variables',3,'p_function_variables','pascal_to_c.py',144),
  ('function_variables -> ID COLON BOOLEAN','function_variables',3,'p_function_variables','pascal_to_c.py',145),
  ('function_variables -> ID COLON STRING','function_variables',3,'p_function_variables','pascal_to_c.py',146),
  ('function_variables -> ID COLON CHARACTER','function_variables',3,'p_function_variables','pascal_to_c.py',147),
  ('function_variables -> ID COLON INTEGER COMMA function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',148),
  ('function_variables -> ID COLON REAL COMMA function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',149),
  ('function_variables -> ID COLON BOOLEAN COMMA function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',150),
  ('function_variables -> ID COLON STRING COMMA function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',151),
  ('function_variables -> ID COLON CHARACTER COMMA function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',152),
  ('function_variables -> ID COLON INTEGER SEMICOLON function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',153),
  ('function_variables -> ID COLON REAL SEMICOLON function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',154),
  ('function_variables -> ID COLON BOOLEAN SEMICOLON function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',155),
  ('function_variables -> ID COLON STRING SEMICOLON function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',156),
  ('function_variables -> ID COLON CHARACTER SEMICOLON function_variables','function_variables',5,'p_function_variables','pascal_to_c.py',157),
  ('function_variables -> empty','function_variables',1,'p_function_variables','pascal_to_c.py',158),
  ('main_body -> BEGIN body END','main_body',3,'p_main_body','pascal_to_c.py',173),
  ('write -> WRITE LPAREN STR RPAREN SEMICOLON','write',5,'p_write','pascal_to_c.py',178),
  ('write -> WRITE LPAREN expression RPAREN SEMICOLON','write',5,'p_write','pascal_to_c.py',179),
  ('body -> while_loop body','body',2,'p_body','pascal_to_c.py',184),
  ('body -> for_loop body','body',2,'p_body','pascal_to_c.py',185),
  ('body -> repeat_loop body','body',2,'p_body','pascal_to_c.py',186),
  ('body -> if_statement body','body',2,'p_body','pascal_to_c.py',187),
  ('body -> expression body','body',2,'p_body','pascal_to_c.py',188),
  ('body -> var_assign body','body',2,'p_body','pascal_to_c.py',189),
  ('body -> write body','body',2,'p_body','pascal_to_c.py',190),
  ('body -> empty','body',1,'p_body','pascal_to_c.py',191),
  ('while_loop -> WHILE boolean_expression DO main_body','while_loop',4,'p_while_loop','pascal_to_c.py',199),
  ('for_loop -> FOR ID ASSIGN INT DOWNTO INT DO main_body','for_loop',8,'p_for_loop','pascal_to_c.py',204),
  ('for_loop -> FOR ID ASSIGN INT TO INT DO main_body','for_loop',8,'p_for_loop','pascal_to_c.py',205),
  ('repeat_loop -> REPEAT body UNTIL boolean_expression SEMICOLON','repeat_loop',5,'p_repeat_loop','pascal_to_c.py',219),
  ('if_statement -> IF boolean_expression THEN main_body','if_statement',4,'p_if_statement','pascal_to_c.py',224),
  ('if_statement -> IF boolean_expression THEN main_body ELSE main_body','if_statement',6,'p_if_statement','pascal_to_c.py',225),
  ('numeric -> INT','numeric',1,'p_numeric','pascal_to_c.py',233),
  ('numeric -> RE','numeric',1,'p_numeric','pascal_to_c.py',234),
  ('numeric -> ID','numeric',1,'p_numeric','pascal_to_c.py',235),
  ('boolean_expression -> expression LESSER expression','boolean_expression',3,'p_boolean_expression','pascal_to_c.py',240),
  ('boolean_expression -> expression LESSER_EQUAL expression','boolean_expression',3,'p_boolean_expression','pascal_to_c.py',241),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','pascal_to_c.py',242),
  ('boolean_expression -> expression GREATER_EQUAL expression','boolean_expression',3,'p_boolean_expression','pascal_to_c.py',243),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','pascal_to_c.py',244),
  ('boolean_expression -> NOT boolean_expression','boolean_expression',2,'p_boolean_expression','pascal_to_c.py',245),
  ('boolean_expression -> boolean_expression and_or boolean_expression','boolean_expression',3,'p_boolean_expression','pascal_to_c.py',246),
  ('boolean_expression -> LPAREN boolean_expression RPAREN','boolean_expression',3,'p_boolean_expression','pascal_to_c.py',247),
  ('boolean_expression -> BOOL','boolean_expression',1,'p_boolean_expression','pascal_to_c.py',248),
  ('and_or -> AND','and_or',1,'p_and_or','pascal_to_c.py',263),
  ('and_or -> OR','and_or',1,'p_and_or','pascal_to_c.py',264),
  ('var_assign -> ID ASSIGN STR SEMICOLON','var_assign',4,'p_var_assign','pascal_to_c.py',269),
  ('var_assign -> ID ASSIGN CHAR SEMICOLON','var_assign',4,'p_var_assign','pascal_to_c.py',270),
  ('var_assign -> ID ASSIGN BOOL SEMICOLON','var_assign',4,'p_var_assign','pascal_to_c.py',271),
  ('var_assign -> ID ASSIGN expression SEMICOLON','var_assign',4,'p_var_assign','pascal_to_c.py',272),
  ('var_assign -> ID SEMICOLON','var_assign',2,'p_var_assign','pascal_to_c.py',273),
  ('function_call -> ID LPAREN vars RPAREN','function_call',4,'p_function_call','pascal_to_c.py',281),
  ('vars -> STR COMMA vars','vars',3,'p_vars','pascal_to_c.py',286),
  ('vars -> BOOL COMMA vars','vars',3,'p_vars','pascal_to_c.py',287),
  ('vars -> CHAR COMMA vars','vars',3,'p_vars','pascal_to_c.py',288),
  ('vars -> expression COMMA vars','vars',3,'p_vars','pascal_to_c.py',289),
  ('vars -> expression','vars',1,'p_vars','pascal_to_c.py',290),
  ('vars -> STR','vars',1,'p_vars','pascal_to_c.py',291),
  ('vars -> BOOL','vars',1,'p_vars','pascal_to_c.py',292),
  ('vars -> CHAR','vars',1,'p_vars','pascal_to_c.py',293),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','pascal_to_c.py',301),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','pascal_to_c.py',302),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','pascal_to_c.py',303),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','pascal_to_c.py',304),
  ('expression -> expression MOD expression','expression',3,'p_binary_operators','pascal_to_c.py',305),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_binary_operators','pascal_to_c.py',306),
  ('expression -> numeric','expression',1,'p_binary_operators','pascal_to_c.py',307),
  ('expression -> function_call','expression',1,'p_binary_operators','pascal_to_c.py',308),
  ('variable_block -> empty','variable_block',1,'p_variable_block','pascal_to_c.py',327),
  ('variable_block -> VAR variables','variable_block',2,'p_variable_block','pascal_to_c.py',328),
  ('variables -> variable_describe','variables',1,'p_variables','pascal_to_c.py',336),
  ('variables -> variable_describe variables','variables',2,'p_variables','pascal_to_c.py',337),
  ('variable_describe -> ID COLON STRING SEMICOLON','variable_describe',4,'p_variable_describe','pascal_to_c.py',345),
  ('variable_describe -> ID COLON INTEGER SEMICOLON','variable_describe',4,'p_variable_describe','pascal_to_c.py',346),
  ('variable_describe -> ID COLON CHARACTER SEMICOLON','variable_describe',4,'p_variable_describe','pascal_to_c.py',347),
  ('variable_describe -> ID COLON BOOLEAN SEMICOLON','variable_describe',4,'p_variable_describe','pascal_to_c.py',348),
  ('variable_describe -> ID COLON REAL SEMICOLON','variable_describe',4,'p_variable_describe','pascal_to_c.py',349),
  ('empty -> <empty>','empty',0,'p_empty','pascal_to_c.py',357),
]
